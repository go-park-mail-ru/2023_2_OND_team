// Code generated by MockGen. DO NOT EDIT.
// Source: repo.go

// Package mock is a generated GoMock package.
package mock

import (
	io "io"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockRepository is a mock of Repository interface.
type MockRepository struct {
	ctrl     *gomock.Controller
	recorder *MockRepositoryMockRecorder
}

// MockRepositoryMockRecorder is the mock recorder for MockRepository.
type MockRepositoryMockRecorder struct {
	mock *MockRepository
}

// NewMockRepository creates a new mock instance.
func NewMockRepository(ctrl *gomock.Controller) *MockRepository {
	mock := &MockRepository{ctrl: ctrl}
	mock.recorder = &MockRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRepository) EXPECT() *MockRepositoryMockRecorder {
	return m.recorder
}

// SaveImage mocks base method.
func (m *MockRepository) SaveImage(prefixPath, extension string, image io.Reader) (string, int64, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SaveImage", prefixPath, extension, image)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(int64)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// SaveImage indicates an expected call of SaveImage.
func (mr *MockRepositoryMockRecorder) SaveImage(prefixPath, extension, image interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SaveImage", reflect.TypeOf((*MockRepository)(nil).SaveImage), prefixPath, extension, image)
}

// SetBasePath mocks base method.
func (m *MockRepository) SetBasePath(path string) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "SetBasePath", path)
}

// SetBasePath indicates an expected call of SetBasePath.
func (mr *MockRepositoryMockRecorder) SetBasePath(path interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetBasePath", reflect.TypeOf((*MockRepository)(nil).SetBasePath), path)
}

// SetDirToSave mocks base method.
func (m *MockRepository) SetDirToSave(fn func() string) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "SetDirToSave", fn)
}

// SetDirToSave indicates an expected call of SetDirToSave.
func (mr *MockRepositoryMockRecorder) SetDirToSave(fn interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetDirToSave", reflect.TypeOf((*MockRepository)(nil).SetDirToSave), fn)
}
