// TEMPORARY AUTOGENERATED FILE: easyjson stub code to make the package
// compilable during generation.

package  websocket

import (
  "github.com/mailru/easyjson/jwriter"
  "github.com/mailru/easyjson/jlexer"
)

func ( MessageFromChannel ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* MessageFromChannel ) UnmarshalJSON([]byte) error { return nil }
func ( MessageFromChannel ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* MessageFromChannel ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_MessageFromChannel *MessageFromChannel

func ( Object ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* Object ) UnmarshalJSON([]byte) error { return nil }
func ( Object ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* Object ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_Object *Object

func ( PublishRequest ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* PublishRequest ) UnmarshalJSON([]byte) error { return nil }
func ( PublishRequest ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* PublishRequest ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_PublishRequest *PublishRequest

func ( ResponseMessage ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* ResponseMessage ) UnmarshalJSON([]byte) error { return nil }
func ( ResponseMessage ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* ResponseMessage ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_ResponseMessage *ResponseMessage

func ( ResponseOnRequest ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* ResponseOnRequest ) UnmarshalJSON([]byte) error { return nil }
func ( ResponseOnRequest ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* ResponseOnRequest ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_ResponseOnRequest *ResponseOnRequest
